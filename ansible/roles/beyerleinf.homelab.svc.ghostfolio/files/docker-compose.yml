name: ghostfolio
services:
  ghostfolio:
    image: ghostfolio/ghostfolio:2.112.0
    container_name: ghostfolio
    init: true
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3333/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ghostfolio
      - traefik
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?connect_timeout=300&sslmode=prefer
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ACCESS_TOKEN_SALT: ${ACCESS_TOKEN_SALT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    labels:
      traefik.enable: true
      traefik.http.routers.ghostfolio.rule: "Host(`ghostfolio.lab.beyerleinf.de`)"
      traefik.http.routers.ghostfolio.entrypoints: "websecure"
      traefik.http.routers.ghostfolio.tls.certresolver: "hetzner"
      traefik.http.services.ghostfolio.loadbalancer.server.port: 3333

  postgres:
    image: postgres:15.8-alpine3.20
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_READ_SEARCH
      - FOWNER
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true
    networks:
      - ghostfolio
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:7.4.0-alpine3.20
    user: "999:1000"
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    networks:
      - ghostfolio
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", $REDIS_PASSWORD]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --pass $REDIS_PASSWORD ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  traefik:
    external: true
  ghostfolio:
    name: ghostfolio

volumes:
  postgres:
