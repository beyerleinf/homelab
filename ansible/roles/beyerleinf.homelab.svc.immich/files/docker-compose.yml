name: immich
services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.113.1
    container_name: immich-server
    extends:
      file: hwaccel.transcoding.yml
      service: nvenc # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    networks:
      - traefik
      - immich
    volumes:
      - ${IMMICH_UPLOAD_DIR}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.rule=Host(`pics.lab.beyerleinf.de`)"
      - "traefik.http.routers.immich.entrypoints=websecure"
      - "traefik.http.routers.immich.tls.certresolver=hetzner"

  immich-machine-learning:
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    image: ghcr.io/immich-app/immich-machine-learning:v.113.1-cuda
    networks:
      - immich
    extends: # see https://immich.app/docs/features/ml-hardware-acceleration
      file: hwaccel.ml.yml
      service: cuda # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always

  redis:
    image: redis:7.4.0-alpine
    networks:
      - immich
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    image: tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - db-pg14:/var/lib/postgresql/data
    networks:
      - immich
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      # start_interval: 30s
      # start_period: 5m
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=vectors.so",
        "-c",
        'search_path="$$user", public, vectors',
        "-c",
        "logging_collector=on",
        "-c",
        "max_wal_size=2GB",
        "-c",
        "shared_buffers=512MB",
        "-c",
        "wal_compression=on",
      ]
    restart: always

  db-backup:
    image: tiredofit/db-backup:4.1.4
    environment:
      TIMEZONE: "Europe/Berlin"
      MODE: "MANUAL"
      DEBUG_MODE: true
      MANUAL_RUN_FOREVER: false
      CONTAINER_ENABLE_SCHEDULING: false
      CONTAINER_ENABLE_MONITORING: false
      BACKUP_JOB_CONCURRENCY: 1
      DEFAULT_COMPRESSION: "GZ"
      DEFAULT_GZ_RSYNCABLE: true
      DEFAULT_S3_BUCKET: ${S3_BUCKET_NAME}
      DEFAULT_S3_KEY_ID: ${S3_BUCKET_KEY_ID}
      DEFAULT_S3_KEY_SECRET: ${S3_BUCKET_KEY_SECRET}
      DEFAULT_S3_REGION: ${S3_BUCKET_REGION}
      DEFAULT_S3_HOST: ${S3_BUCKET_HOST}
      ENABLE_NOTIFICATIONS: true
      NOTIFICATION_TYPE: "MATRIX"
      MATRIX_HOST: ${MATRIX_HOST}
      MATRIX_ROOM: ${MATRIX_ROOM}
      MATRIX_ACCESS_TOKEN: ${MATRIX_ACCESS_TOKEN}
      DB01_TYPE: "pgsql"
      DB01_HOST: "database"
      DB01_NAME: ${DB_DATABASE_NAME}
      DB01_SPLIT_DB: true
      DB01_BACKUP_LOCATION: "S3"
      DB01_USER: ${DB_USERNAME}
      DB01_PASS: ${DB_PASSWORD}
      DB01_S3_PATH: "db/immich"
      DB01_CLEANUP_TIME: 40320 # 28 days
    networks:
      - immich

volumes:
  model-cache:
  db-pg14:

networks:
  traefik:
    name: traefik
    external: true
  immich:
    name: immich
