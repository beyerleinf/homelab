---
# tasks file for beyerleinf.homelab.svc.unifi

- name: Create temp directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: directory
    owner: root
    group: root
    mode: "777"
    recurse: true

- name: Ensure docker directory exists
  ansible.builtin.file:
    path: "{{ docker_dir }}"
    state: directory
    owner: root
    group: root
    mode: "777"
    recurse: true

- name: Ensure docker/init.d directory exists
  ansible.builtin.file:
    path: "{{ docker_dir }}/init.d"
    state: directory
    owner: root
    group: root
    mode: "777"
    recurse: true

- name: Copy Docker env file
  ansible.builtin.template:
    src: files/.docker-env.j2
    dest: "{{ tmp_dir }}/.env"
    mode: "666"

- name: Copy Docker Compose file
  ansible.builtin.copy:
    src: files/docker-compose.yml
    dest: "{{ tmp_dir }}/docker-compose.yml"
    mode: "666"

- name: Copy init-mongo.sh
  ansible.builtin.copy:
    src: files/init-mongo.sh
    dest: "{{ docker_dir }}/init.d/init-mongo.sh"
    mode: "777"

- name: Stop UniFi
  community.docker.docker_compose_v2:
    project_src: "{{ tmp_dir }}"
    files:
      - docker-compose.yml
    state: absent
    remove_orphans: true
    recreate: "always"

- name: Deploy UniFi
  community.docker.docker_compose_v2:
    project_src: "{{ tmp_dir }}"
    files:
      - docker-compose.yml
  register: output

- name: Verify that UniFi is running
  ansible.builtin.assert:
    that:
      - "output.containers[0].State == 'running'"
      - "output.containers[1].State == 'running'"
#
# - name: Remove temp directory
#   ansible.builtin.file:
#     path: "{{ tmp_dir }}"
#     state: absent
